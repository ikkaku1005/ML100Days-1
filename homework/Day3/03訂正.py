#2. 在不用「整數亂數方法」的限制下，如何將包含小數的轉換整數？請將給定的 a 陣列當中的元素變成去掉小數變成整數。
import numpy as np
a = np.random.rand(2,3) #由於沒有指定輸出陣列的大小，所以會產生一個隨機數。
                        #生成的輸出數的範圍在 0 和 1 之間。
a = a*100
print(a)
print(a.round()) #a.round() 或 np.roound(a) :四捨五入
print(np.round(a))  

#3. 承上題，怎樣可以限制整數的範圍介於 m - n 之間？請將給定的 a 陣列當中的元素的範圍調整成 m - n 之間。
m = 20
n = 40
a = np.random.rand(2,3) * ( n - m)  #先把範圍放大到 m - n 之間，再平移 +m，舉個例子：
b = a
print((a - b % 1 ) + m)  #a % b : a 除以 b 後的餘數。所以 b%1 意思是 「b 除以 1 的餘數」，也就是取 b 的小數，

#舉個例子
# 0 * (40-20) + 20 = 20
# 0.5 * (40-20) + 20 = 30
# 1 * (40-20) + 20 = 40

# % 是一種運算符號，用來取餘數，也就是無法整除的部分
#例如下方範例 array b 中的第一個數值是 10.05384103
#10.05384103 ÷ 1 = 10 餘 0.05384103
#而 b % 1 這個運算就會得到最後的 0.05384103
#m = 20
#n = 40
#a = np.random.rand(2, 3) * (n - m)
#b = a
# b: 
# array([[10.05384103,  9.43968711,  8.76100301],
#        [10.8041641 ,  9.07431768, 17.22963854]])
# b % 1: 
# array([[0.05384103, 0.43968711, 0.76100301],
#        [0.8041641 , 0.07431768, 0.22963854]])
